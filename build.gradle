plugins {
    id 'java'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'de.highbyte_le.semver' version '1.3.1'
}

sourceCompatibility = 1.8

project.group='com.github.pmairif'
version = new de.highbyte_le.semver.ReadSemVer(project).read()

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "Weberknecht",
                "Implementation-Version": project.version
        )
    }
    metaInf {
        from { 'tlds' }
        into { 'tlds' }
    }
}

afterEvaluate {
    distZip.dependsOn javadocJar
}

distributions {
    main {
        contents {
            from {
                'dist-files'
                'build/libs/weberknecht-'+project.version+'-javadoc.jar'
            }
        }
    }
}

ext {
    versionJunit5 = "5.5.2"
    versionMockito = "3.0.0"
    versionSlf4j = "1.7.+"
}

dependencies {
    implementation 'commons-lang:commons-lang:2.+'
    implementation 'org.jdom:jdom:1.+'
    implementation 'org.json:json:+'
    implementation "org.slf4j:slf4j-api:$versionSlf4j"
    implementation 'javax.servlet:jsp-api:2.+'

    testImplementation "org.slf4j:slf4j-simple:$versionSlf4j"
    testImplementation "org.junit.jupiter:junit-jupiter:${versionJunit5}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${versionJunit5}"
    testImplementation "org.mockito:mockito-junit-jupiter:${versionMockito}"
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

ext.mavenUrl = version.endsWith('-SNAPSHOT') ? "https://oss.sonatype.org/content/repositories/snapshots" : " https://oss.sonatype.org/service/local/staging/deploy/maven2"

publishing {
    repositories {
        maven {
            url mavenUrl
            credentials {
                username sonatypeUser
                password sonatypePass
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}
