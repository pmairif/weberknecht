how to use RPX-support in your web apps.

1 filter
1.1 declare the RPX filter in your web.xml:
	<filter>
		<filter-name>rpxFilter</filter-name>
		<filter-class>de.highbyte_le.weberknecht.rpx.RpxAuthenticationFilter</filter-class>
		<init-param>
			<param-name>persistence_manager</param-name>
			<param-value>de.highbyte_le.weberknecht.persistence.MockupPersistenceManager</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>rpxFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
 
1.2 optionally create a custom PersistenceManager and replace the corresponding param value above.
	The persistence manager needs a constructor without arguments.

2 your JSP
2.1 declare the taglibs:
	<%@ taglib uri="http://weberknecht.highbyte-le.de/tld/UserAuthTest" prefix="auth" %>
	<%@ taglib uri="http://weberknecht.highbyte-le.de/tld/rpx" prefix="rpx" %>

2.2 create user bean or get from session:
	<% GeneralUserBean login = GeneralUserBean.getFromSession(request.getSession()); %>

2.3 import needed JavaScript functions (only once on your page {in the HTML head} and only for popup signin needed). replace 'example.do' and 'your_realm':
	<rpx:load-functions lang="de" realm="your_realm" responsePath="example.do"/>

because signin is seldom needed, if a user is already signed in:
	<auth:user-not-loggedin>
		<rpx:load-functions lang="de" realm="your_realm" responsePath="example.do"/>
	</auth:user-not-loggedin>

2.4 the popup signin:
	<rpx:signin-popup responsePath="example.do">sign in</rpx:signin-popup>

2.5 the embedded sign in dialog:
	<rpx:signin-embed responsePath="example.do"/>

2.6 sign off links:
	<a href="example.do?do=signoff">sign off</a>

2.7 displaying user information:
	<%=login.getDisplayName_htmlEscaped()%>

2.8 a combined example (simplified HTML):
	<html>
		<head>
			<auth:user-not-loggedin>
				<rpx:load-functions lang="de" realm="your_realm" responsePath="example.do"/>
			</auth:user-not-loggedin>
		</head>
		
		<body>
			<div id="header-signin">
				<auth:user-not-loggedin>
					<rpx:signin-popup responsePath="example.do">sign in</rpx:signin-popup>
				</auth:user-not-loggedin>
				<auth:user-loggedin>
					<%=login.getDisplayName_htmlEscaped()%> |
					<a href="example.do?do=signoff">sign off</a>
				</auth:user-loggedin>
			</div>
		</body>
	</html>

3 catalina context.xml:
3.1 set the RPX API key:
    <Environment name="rpx_api_key" value="" type="java.lang.String" />
    
3.2 set the webapp base URL:
    <!-- webapp_base_url is used to create return addresses for RPX communication -->
    <Environment name="webapp_base_url" value="http://localhost:8080/myWebapp/" type="java.lang.String" />
